kind: pipeline
type: docker
name: deploy-for-main-and-drone

steps:
  # 1. 단위 테스트, 통합 테스트
  - name: test
    image: python:3.12
    environment:
      DJANGO_SETTINGS_MODULE: my_project.settings
    commands:
      - pip install --upgrade pip
      - pip install -r requirements.txt
      - python manage.py migrate
      - pytest

  # 2. Bandit 정적 분석
  - name: bandit-analysis
    image: python:3.12
    commands:
      - apt-get update && apt-get install -y jq
      - pip install bandit
      - mkdir -p analysis
      - bandit -r . -f json -o analysis/bandit-report.json -x ./zapp/tests.py,./zapp/migrations,./zapp/static
      - |
        ERRORS=$(jq '.metrics._totals.high + .metrics._totals.medium // 0' analysis/bandit-report.json)
        if [ "$ERRORS" -gt 0 ]; then
          echo "❌ 배포 중단: 보안 취약점이 ${ERRORS}건 발견되었습니다."
          exit 1
        else
          echo "✅ 보안 분석 통과: 심각한 취약점이 없습니다. 배포를 계속합니다."
        fi

  # 3. ECS 배포 단계
  - name: deploy-ecs
    image: amazon/aws-cli
    settings:
      access_key:
        from_secret: aws_access_key_id
      secret_key:
        from_secret: aws_secret_access_key
      region: ap-northeast-2
    commands:
      - aws ecs update-service --cluster ChickCluster --service ChickTask-service-DJANGO --force-new-deployment

trigger:
  branch:
    - main
    - feat/drone
