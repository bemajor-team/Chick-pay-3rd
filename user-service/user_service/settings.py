"""
Django settings for user_service project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
import sys
from pathlib import Path
import boto3
import json
from botocore.exceptions import ClientError
from pathlib import Path
from dotenv import load_dotenv




# Aws secret HJ code copy
def load_aws_secret(secret_name, region_name="ap-northeast-2"):
    """
    AWS Secrets Manager에서 비밀을 가져와 환경 변수로 설정합니다.

    :param secret_name: 저장된 secret 이름 (예: 'chickpay/prod/credentials')
    :param region_name: AWS 리전 (기본: ap-northeast-2 = 서울)
    """
    client = boto3.client("secretsmanager", region_name=region_name)

    try:
        response = client.get_secret_value(SecretId=secret_name)
        secret = json.loads(response['SecretString'])

        # 환경 변수로 설정
        for key, value in secret.items():
            os.environ[key] = value

    except ClientError as e:
        print(f"[ERROR] Failed to load secrets: {e}")
        raise e

load_aws_secret("koreano3")

# =======================
# 시크릿 로드 (운영 환경에서만)
# =======================
# SECRET_NAME = os.getenv("AWS_SECRET_NAME", "koreano3")
# if os.getenv("USE_AWS_SECRETS", "false") == "true":
#     load_aws_secret(SECRET_NAME)

# =======================
# 환경변수/시크릿에서 값 읽기 함수
# =======================
def get_config(key, default=None):
    return os.getenv(key, default)

# =======================
# Django 기본 설정
# =======================
BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = 'django-insecure-abcd-abcd-abcd-1234567890'
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

AUTH_USER_MODEL = 'user_app.CustomUser'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'rest_framework',
    'user_app',
    'corsheaders',

]


#TODO 개발용입니다 운영용에선 필히 삭제!! delete
CORS_ALLOW_ALL_ORIGINS = True  # 개발용(운영에서는 도메인 제한 권장)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'user_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'user_service.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DATABASE_NAME', 'user_db'),
        'USER': os.getenv('DATABASE_USER', 'test'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD', 'test'),
        'HOST': os.getenv('DATABASE_HOST', 'user-db'),
        'PORT': os.getenv('DATABASE_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'
TIME_ZONE = 'Asia/Seoul'
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
