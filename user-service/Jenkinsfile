pipeline {
    agent any

    environment {
        AWS_DEFAULT_REGION = 'ap-northeast-2'
        ECR_REPO = '297195401389.dkr.ecr.ap-northeast-2.amazonaws.com/zapp/user-service'
        IMAGE_TAG = "${env.BUILD_NUMBER}"
        SERVICE_DIR = "user-service"
        BASE_BRANCH = "origin/terraform"
    }

    stages {
        stage('Check Changes in user-service') {
            steps {
                script {
                    echo "🔍 기준 브랜치: ${BASE_BRANCH}"
                    sh "git fetch origin terraform"

                    def changes = sh(
                        script: "git diff --name-only ${BASE_BRANCH} HEAD | grep '^${SERVICE_DIR}/' || true",
                        returnStdout: true
                    ).trim()

                    if (changes) {
                        echo "✅ 변경된 파일:\n${changes}"
                        currentBuild.description = "Changes detected in ${SERVICE_DIR}"
                        env.SHOULD_DEPLOY = "true"
                    } else {
                        echo "🚫 변경 없음. Docker Build & Push 생략"
                        env.SHOULD_DEPLOY = "false"
                    }
                }
            }
        }

        stage('Docker Build & Push') {
            when {
                expression {
                    return env.SHOULD_DEPLOY == "true"
                }
            }
            steps {
                dir("${SERVICE_DIR}") {
                    script {
                        sh """
                        echo "🛠 Docker Build 시작"
                        aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO

                        docker build -t $ECR_REPO:$IMAGE_TAG .

                        echo "📤 ECR Push"
                        docker push $ECR_REPO:$IMAGE_TAG
                        """
                    }
                }
            }
        }
    }
}
